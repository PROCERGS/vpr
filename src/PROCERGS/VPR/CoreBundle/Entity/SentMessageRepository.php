<?php

namespace PROCERGS\VPR\CoreBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SentMessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SentMessageRepository extends EntityRepository
{
    private static $__save1 = NULL;
    private static $__save2 = NULL;
    private static $__save3 = NULL;
    private static $__save4 = NULL;
    
    public function save(SentMessage &$obj)
    {
        $conn = $this->getEntityManager()->getConnection();
        if (null === self::$__save1) {
            $sql = "insert into sent_message (ballot_box_id, destination, sms_code, sent_date, sent_message_type_id, sent_message_mode_id, success) values (?,?,?,?,?,?,?)";
            self::$__save1 = $conn->prepare($sql);
            $sql = "update ballot_box set sent_message1_id = ? where id = ?";
            self::$__save2 = $conn->prepare($sql);
            $sql = "update ballot_box set sent_message2_id = ? where id = ?";
            self::$__save3 = $conn->prepare($sql);
            $sql = "select max(id) id from  sent_message";
            self::$__save4 = $conn->prepare($sql);
        }
        $obj->setSentDate(new \DateTime());
        $result = self::$__save1->execute(array(
            $obj->getBallotBoxId(),
            $obj->getDestinationToDb(),
            $obj->getSmsCodeToDb(),
            $obj->getSentDateToDb(),
            $obj->getSentMessageTypeId(),
            $obj->getSentMessageModeId(),
            $obj->getSuccessToDb()
        ));
        self::$__save4->execute();
        $obj->setId(current(self::$__save4->fetchAll(\PDO::FETCH_COLUMN)));
        if ($obj->getSentMessageTypeId() == SentMessage::TYPE_SENHA) {            
            $result = self::$__save2->execute(array(
                $obj->getSuccessToDb() ? $obj->getId() : null,
                $obj->getBallotBoxId()
            ));
        } else {
            $result = self::$__save3->execute(array(
                $obj->getSuccessToDb() ? $obj->getId() : null,
                $obj->getBallotBoxId()
            ));
        }
        return $result;
    }
    
}
