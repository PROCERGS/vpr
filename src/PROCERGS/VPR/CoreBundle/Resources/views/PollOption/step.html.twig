{% extends 'PROCERGSVPRCoreBundle::base.html.twig' %}

{% block body %}
<div class="row">
    <div class="col-md-12">
        <div class="jumbotron">
            {{ form_start(form, {'attr' : {'role' : 'form'}}) }} 
            {{ form_errors(form) }}

            {% if options %}
            <dl>
            {% for currStep,categories in options %}
                <dt>{{ currStep }}</dt>
                <dd>
                    <dl>
                {% for category,pollOptions in categories %}
	                <dt>{{ category }}</dt>
	                <dd class="category">
	                   <ol>
	                {% for option in pollOptions %}
	                       <li>
	                            <input type="checkbox" id="option_{{ option.id }}" name="options[]" value="{{ option.id }}"/>
                                <label for="cb6">{{ option.title |trans }}</label>
	                       </li>
                    {% endfor %}
                        </ol>
                    </dd>
                {% endfor %}
                    </dl>
                </dd>
            {% endfor %}
            </dl>
            {% endif %}
            <div id="button-bar">
            <button id="btn-vote" type="button" class="btn btn-success btn-lg btn-block">{{ 'form.vote' | trans }}</button>
            <div id="confirmation" style="display: none;">
            <button id="btn-confirm" type="submit" class="btn btn-success btn-lg btn-block">{{ 'form.confirm' | trans }}</button>
            <button id="btn-cancel" type="button" class="btn btn-success btn-lg btn-block">{{ 'form.cancel' | trans }}</button>
            </div>
            </div>
            {{ form_end(form) }}
        </div>
    </div>
</div>
{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
.category li {
    list-style: none outside none;
}
</style>
{% endblock %}

{% block javascripts %}
{{ parent() }}    
<script>
var oba = {};
oba.label = {'limit' : '{{ 'step.limit.selection' |trans }}'};
oba.maxItens = {{ step.getMaxSelection }};
$(document).on('click', '#itens input', function (event) {
	var sel = $('#itens input:checked');
	if (sel.length > oba.maxItens) {
		event.preventDefault();
		alert(oba.label['limit'] + oba.maxItens);
    }
});
$(document).on('click', '#btn-vote', function(event) {
	//debugger;
	$('input:checked').parents('.category').prev('dt').addClass('lero');
	$('dd dt').not('.lero').slideUp('medium');
	$('dd dt').not('.lero').next().slideUp('medium');
	$("li input").not(':checked').parents('li').slideUp('medium');
	$('#btn-vote').hide();	
	$('#confirmation').show();
});
$(document).on('click', '#btn-cancel', function(event) {
	$('dt,dd,li').slideDown('medium').removeClass('lero');	
	$('#confirmation').hide();
	$('#btn-vote').show();	
});
</script>    
{% endblock %}
